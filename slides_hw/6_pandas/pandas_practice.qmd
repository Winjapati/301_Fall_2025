---
title: "pandas_practice"
format: html
---

Recall: lining up lists:

-   books

-   pub_date

Basic structure of pd Dataframe, like a dictionary with key:value, with a list as the value

-   the key = the column name

-   The values = the cells underneath

```{python}
import pandas as pd

mydataset = {
  'cars': ["BMW", "Volvo", "Ford"],
  'passings': [3, 7, 2]
}

myvar = pd.DataFrame(mydataset)
print(myvar)
```

Panda Series â€“ Column in a table

```{python}
import pandas as pd

unbelievable = ["un", "believe", "able"]
myvar = pd.Series(unbelievable)

print(myvar[0])
```

Creating column labels

```{python}
import pandas as pd

unbelievable = ["un", "believe", "able"]
myvar = pd.Series(unbelievable, index = ["prefix", "root", "suffix"])

print(myvar["prefix"])
```

Adding row labels

```{python}
import pandas as pd

calories = {"day1": 420, "day2": 380, "day3": 390}

myvar = pd.Series(calories, index = ["day1", "day2"])

print(myvar)
```

```{python}
import pandas as pd

data = {
    "language": ["Latin", "Greek", "Sanskrit", "Hittite"],
    "family": ["Indo-European", "Indo-European", "Indo-European", "Anatolian"],
    "speakers_millions": [0, 0, 0, 0.001]
}

df = pd.DataFrame(data)
print(df)
```

Selecting a column as a Series

```{python}
df["language"]
```

Selecting a column as a DF

```{python}
df[["language"]]
```

Selecting multiple columns

```{python}
df[["language", "family"]]
```

Selecting Rows

-   `iloc` = "integer location"

```{python}
df.iloc[0]       # first row
df.iloc[1:3]     # rows 1 and 2 (Python slices stop before the end)
```

-   Note the difference in presentation between 1 row and multiple

Selecting Rows

-   `loc` = "label location"

```{python}
df.loc[0]          # same as .iloc[0] since our index = 0,1,2,3
```

```{python}
langs = {"Italic": ["Latin", "Oscan", "Umbrian"], "Greek": ["Doric", "Aeolic"], "Indic": ["Sanskrit", "Hindi", "Prakrit", "Vedic"]}
s = pd.Series(langs)
print(s)
```

```{python}
df = pd.DataFrame({
    "language": ["Latin", "Greek", "Sanskrit"],
    "family": ["IE", "IE", "IE"]
})

print(df["language"])
```

Combining Series

```{python}
import pandas as pd

# Number of known reflexes of the PIE root *bher- "to carry"
reflexes_verb = pd.Series(
    {"Latin": 8, "Greek": 10, "Sanskrit": 12, "Old English": 6},
    name="verb_reflexes"
)

# Number of known reflexes of the PIE root *bhoros "bearing" (noun)
reflexes_noun = pd.Series(
    {"Latin": 5, "Greek": 7, "Sanskrit": 9, "Old English": 3},
    name="noun_reflexes"
)

combined = pd.DataFrame({"verb": reflexes_verb, "noun": reflexes_noun})
print(combined)
```

```{python}
df = pd.DataFrame({
    "language": ["Latin", "Greek", "Sanskrit", "Finnish"],
    "family":   ["Indo-European", "Indo-European", "Indo-European", "Uralic"],
    "speakers_millions": [0, 0, 0, 6],
})
df
```

```{python}
import pandas as pd

languages = {
    "French": "Romance",
    "Spanish": "Romance",
    "Italian": "Romance",
    "English": "Germanic"
}

lang = [key for key in languages.keys()]
fam = [value for value in languages.values()]
print(lang, fam)
```

```{python}
import pandas as pd

langs = pd.Series(lang, name="languages")
fams = pd.Series(fam, name="families")
langs, fams

df = pd.DataFrame({
    "languages": langs,
    "family": fams
})
df
```
