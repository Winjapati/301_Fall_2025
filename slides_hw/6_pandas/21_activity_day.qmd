---
title: "Computation for Linguists"
subtitle: "Activity Day: Style Detective"
date: "October 13, 2025"
author: "Dr. Andrew M. Byrd"
format:
  revealjs:
    css: header_shrink.css
    theme: beige
    slide-number: true
    center: true
    toc: true
    toc-title: "Plan for the Day"
    toc-depth: 1
jupyter: python3
editor: source
---

## 🕵️‍♀️ Stylometry Detective  

**Goal:** discover what makes an author’s writing style distinctive  
using only the Python tools you already know — no new libraries.  

You’ll:  
1. Download two novels  
2. Explore & clean the texts  
3. Measure style  
4. Build a mini “classifier”  

---

## 🧩 Step 0 — Setup

- Create a new `qmd`, called `style_detective`. 
- Choose *any* **two novels** from [Project Gutenberg](https://www.gutenberg.org/), and download them using Python.

## Step 1 — Read & Clean

- Read both files, and assign them to appropriate variable names.
- Split the words up, cleaning whitespace and punctuation. Make all words lowercase as well.

## Step 2 — Explore the Data

- Next,  you will look for specific patterns.

1. total vs. unique word counts  
2. average word length  
3. most common words (excluding “the,” “and,” “of”)  
4. adverbs (`-ly`) and other suffixes  
5. amount of dialogue (quotation marks)

---

## Step 3 — Create “Style Stats”

| Variable | Description | Example |
|-----------|--------------|----------|
| `avg_word_len` | avg letters per word | `sum(len(w) for w in words) / len(words)` |
| `unique_ratio` | unique / total words | `len(set(words)) / len(words)` |
| `quote_ratio` | dialogue density | `text.count('"') / len(words)` |
| `ly_ratio` | adverb density | `sum(w.endswith('ly') for w in words) / len(words)` |

Compute for both authors → compare!

---

## ⚖️ Step 4 — Guess the Author (10 min)

Create a tiny classifier 💻

```python
if avg_word_len > 4.5 and ly_ratio > 0.005:
    print("Probably Austen.")
else:
    print("Probably Brontë.")
```

Tweak thresholds → test ideas → see which features work best.

---

## 💬 Step 5 — Share (5 min)

Each student reports one finding 🗣️  

> “Austen uses twice as many *-ly* adverbs.”  
> “Brontë has longer words but fewer unique ones.”  
> “Dialogue = 12 % of *Jane Eyre*, 5 % of *Austen*.”

---

## ⭐ Stretch Goals (if you finish early)

- Add a third author (Dickens, Poe, Twain)  
- Graph results with `matplotlib` or ASCII bars  
- Save stats to `style_stats.txt`  
- Compare your own writing to an author!  

---

## 🧭 Wrap-Up Discussion

- What linguistic features can Python measure easily?  
- What’s hard without structured data?  
- How could **Pandas** simplify this process?  

> *Next time: turn these lists into DataFrames and analyze like pros.*
